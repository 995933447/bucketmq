syntax = "proto3";

package broker;
option go_package = "github.com/995933447/bucketmq/pkg/api/broker";

service Broker {
    rpc RegTopic(RegTopicReq) returns (RegTopicResp) {}

    rpc RegSubscriber(RegSubscriberReq) returns (RegSubscriberResp) {}

    rpc Pub(PubReq) returns (PubResp) {}
}

message Topic {
    string topic = 1;
    string node_grp  = 2;
    uint32 max_msg_bytes = 3;
}

message Subscriber {
    string topic = 1;
    string subscriber = 2;
    uint32 load_msg_boot_id = 3;
    uint32 concur_consume_num = 4;
    uint32 max_concur_consume_num_per_bucket = 5;
    uint32 msg_weight = 6;
    uint32 load_mode = 7;
    uint64 start_msg_id = 8;
    bool is_serial = 9;
    string consumer = 10;
    uint32 max_consume_ms = 11;
}

message RegTopicReq {
    Topic topic = 1;
}

message RegTopicResp {
}

message RegSubscriberReq {
    Subscriber subscriber = 1;
}

message RegSubscriberResp {
}

message GetTopicReq {
    string topic = 1;
}

message PubReq {
    string topic = 1;
    bytes msg = 2;
    uint32 priority = 3;
    uint32 delay_ms = 4;
    uint32 retry_cnt = 5;
    uint32 bucket_id = 6;
}

message PubResp {
}

message Node {
    string node_grp = 1;
    bool is_master = 2;
}