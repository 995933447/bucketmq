// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snrpc.proto

package snrpc // import "github.com/995933447/bucketmq/pkg/rpc/snrpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SNRPCProto int32

const (
	SNRPCProto_SNRPCProtoNil             SNRPCProto = 0
	SNRPCProto_SNRPCProtoConsumerConnect SNRPCProto = 1
	SNRPCProto_SNRPCProtoConsume         SNRPCProto = 2
	SNRPCProto_SNRPCProtoHeartBeat       SNRPCProto = 3
)

var SNRPCProto_name = map[int32]string{
	0: "SNRPCProtoNil",
	1: "SNRPCProtoConsumerConnect",
	2: "SNRPCProtoConsume",
	3: "SNRPCProtoHeartBeat",
}
var SNRPCProto_value = map[string]int32{
	"SNRPCProtoNil":             0,
	"SNRPCProtoConsumerConnect": 1,
	"SNRPCProtoConsume":         2,
	"SNRPCProtoHeartBeat":       3,
}

func (x SNRPCProto) String() string {
	return proto.EnumName(SNRPCProto_name, int32(x))
}
func (SNRPCProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_snrpc_ca3c90e6622922ae, []int{0}
}

func init() {
	proto.RegisterEnum("health.SNRPCProto", SNRPCProto_name, SNRPCProto_value)
}

func init() { proto.RegisterFile("snrpc.proto", fileDescriptor_snrpc_ca3c90e6622922ae) }

var fileDescriptor_snrpc_ca3c90e6622922ae = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xce, 0x2b, 0x2a,
	0x48, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0x48, 0x4d, 0xcc, 0x29, 0xc9, 0xd0,
	0xca, 0xe3, 0xe2, 0x0a, 0xf6, 0x0b, 0x0a, 0x70, 0x0e, 0x00, 0x8b, 0x0a, 0x72, 0xf1, 0x22, 0x78,
	0x7e, 0x99, 0x39, 0x02, 0x0c, 0x42, 0xb2, 0x5c, 0x92, 0x08, 0x21, 0xe7, 0xfc, 0xbc, 0xe2, 0xd2,
	0xdc, 0xd4, 0x22, 0xe7, 0xfc, 0xbc, 0xbc, 0xd4, 0xe4, 0x12, 0x01, 0x46, 0x21, 0x51, 0x2e, 0x41,
	0x0c, 0x69, 0x01, 0x26, 0x21, 0x71, 0x2e, 0x61, 0x84, 0xb0, 0x47, 0x6a, 0x62, 0x51, 0x89, 0x53,
	0x6a, 0x62, 0x89, 0x00, 0xb3, 0x93, 0x6e, 0x94, 0x76, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e,
	0x72, 0x7e, 0xae, 0xbe, 0xa5, 0xa5, 0xa9, 0xa5, 0xb1, 0xb1, 0x89, 0x89, 0xb9, 0x7e, 0x52, 0x69,
	0x72, 0x76, 0x6a, 0x49, 0x6e, 0xa1, 0x7e, 0x41, 0x76, 0xba, 0x7e, 0x51, 0x41, 0xb2, 0x3e, 0xd8,
	0xb1, 0x49, 0x6c, 0x60, 0xd7, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xda, 0x61, 0xd1, 0x23,
	0xbc, 0x00, 0x00, 0x00,
}
