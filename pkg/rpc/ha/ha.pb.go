// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/proto/ha.proto

package ha // import "github.com/995933447/bucketmq/pkg/rpc/ha"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgFileType int32

const (
	MsgFileType_MsgFileTypeNil      MsgFileType = 0
	MsgFileType_MsgFileTypeIdx      MsgFileType = 1
	MsgFileType_MsgFileTypeData     MsgFileType = 2
	MsgFileType_MsgFileTypeFinish   MsgFileType = 3
	MsgFileType_MsgFileTypeMsgId    MsgFileType = 4
	MsgFileType_MsgFileTypeLoadBoot MsgFileType = 5
)

var MsgFileType_name = map[int32]string{
	0: "MsgFileTypeNil",
	1: "MsgFileTypeIdx",
	2: "MsgFileTypeData",
	3: "MsgFileTypeFinish",
	4: "MsgFileTypeMsgId",
	5: "MsgFileTypeLoadBoot",
}
var MsgFileType_value = map[string]int32{
	"MsgFileTypeNil":      0,
	"MsgFileTypeIdx":      1,
	"MsgFileTypeData":     2,
	"MsgFileTypeFinish":   3,
	"MsgFileTypeMsgId":    4,
	"MsgFileTypeLoadBoot": 5,
}

func (x MsgFileType) String() string {
	return proto.EnumName(MsgFileType_name, int32(x))
}
func (MsgFileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{0}
}

type Node struct {
	NodeGrp              string   `protobuf:"bytes,1,opt,name=node_grp,json=nodeGrp,proto3" json:"node_grp,omitempty"`
	IsMaster             bool     `protobuf:"varint,2,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	MaxSyncedLogId       uint64   `protobuf:"varint,3,opt,name=max_synced_log_id,json=maxSyncedLogId,proto3" json:"max_synced_log_id,omitempty"`
	TermOfMaxSyncedLog   uint64   `protobuf:"varint,4,opt,name=term_of_max_synced_log,json=termOfMaxSyncedLog,proto3" json:"term_of_max_synced_log,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (dst *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(dst, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNodeGrp() string {
	if m != nil {
		return m.NodeGrp
	}
	return ""
}

func (m *Node) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *Node) GetMaxSyncedLogId() uint64 {
	if m != nil {
		return m.MaxSyncedLogId
	}
	return 0
}

func (m *Node) GetTermOfMaxSyncedLog() uint64 {
	if m != nil {
		return m.TermOfMaxSyncedLog
	}
	return 0
}

type SyncMsgFileLogItem struct {
	Topic                string      `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Subscriber           string      `protobuf:"bytes,2,opt,name=subscriber,proto3" json:"subscriber,omitempty"`
	FileBuf              []byte      `protobuf:"bytes,3,opt,name=file_buf,json=fileBuf,proto3" json:"file_buf,omitempty"`
	MsgFileType          MsgFileType `protobuf:"varint,4,opt,name=msg_file_type,json=msgFileType,proto3,enum=broker.MsgFileType" json:"msg_file_type,omitempty"`
	FileName             string      `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	CreatedAt            uint32      `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	FileOffset           uint32      `protobuf:"varint,7,opt,name=file_offset,json=fileOffset,proto3" json:"file_offset,omitempty"`
	LogId                uint64      `protobuf:"varint,8,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	IsSyncFromMaster     bool        `protobuf:"varint,9,opt,name=is_sync_from_master,json=isSyncFromMaster,proto3" json:"is_sync_from_master,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SyncMsgFileLogItem) Reset()         { *m = SyncMsgFileLogItem{} }
func (m *SyncMsgFileLogItem) String() string { return proto.CompactTextString(m) }
func (*SyncMsgFileLogItem) ProtoMessage()    {}
func (*SyncMsgFileLogItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{1}
}
func (m *SyncMsgFileLogItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncMsgFileLogItem.Unmarshal(m, b)
}
func (m *SyncMsgFileLogItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncMsgFileLogItem.Marshal(b, m, deterministic)
}
func (dst *SyncMsgFileLogItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMsgFileLogItem.Merge(dst, src)
}
func (m *SyncMsgFileLogItem) XXX_Size() int {
	return xxx_messageInfo_SyncMsgFileLogItem.Size(m)
}
func (m *SyncMsgFileLogItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMsgFileLogItem.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMsgFileLogItem proto.InternalMessageInfo

func (m *SyncMsgFileLogItem) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *SyncMsgFileLogItem) GetSubscriber() string {
	if m != nil {
		return m.Subscriber
	}
	return ""
}

func (m *SyncMsgFileLogItem) GetFileBuf() []byte {
	if m != nil {
		return m.FileBuf
	}
	return nil
}

func (m *SyncMsgFileLogItem) GetMsgFileType() MsgFileType {
	if m != nil {
		return m.MsgFileType
	}
	return MsgFileType_MsgFileTypeNil
}

func (m *SyncMsgFileLogItem) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SyncMsgFileLogItem) GetCreatedAt() uint32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *SyncMsgFileLogItem) GetFileOffset() uint32 {
	if m != nil {
		return m.FileOffset
	}
	return 0
}

func (m *SyncMsgFileLogItem) GetLogId() uint64 {
	if m != nil {
		return m.LogId
	}
	return 0
}

func (m *SyncMsgFileLogItem) GetIsSyncFromMaster() bool {
	if m != nil {
		return m.IsSyncFromMaster
	}
	return false
}

type SyncRemoteReplicaReq struct {
	LogItems             []*SyncMsgFileLogItem `protobuf:"bytes,1,rep,name=log_items,json=logItems,proto3" json:"log_items,omitempty"`
	LastSyncedLogId      uint64                `protobuf:"varint,2,opt,name=last_synced_log_id,json=lastSyncedLogId,proto3" json:"last_synced_log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SyncRemoteReplicaReq) Reset()         { *m = SyncRemoteReplicaReq{} }
func (m *SyncRemoteReplicaReq) String() string { return proto.CompactTextString(m) }
func (*SyncRemoteReplicaReq) ProtoMessage()    {}
func (*SyncRemoteReplicaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{2}
}
func (m *SyncRemoteReplicaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRemoteReplicaReq.Unmarshal(m, b)
}
func (m *SyncRemoteReplicaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRemoteReplicaReq.Marshal(b, m, deterministic)
}
func (dst *SyncRemoteReplicaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRemoteReplicaReq.Merge(dst, src)
}
func (m *SyncRemoteReplicaReq) XXX_Size() int {
	return xxx_messageInfo_SyncRemoteReplicaReq.Size(m)
}
func (m *SyncRemoteReplicaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRemoteReplicaReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRemoteReplicaReq proto.InternalMessageInfo

func (m *SyncRemoteReplicaReq) GetLogItems() []*SyncMsgFileLogItem {
	if m != nil {
		return m.LogItems
	}
	return nil
}

func (m *SyncRemoteReplicaReq) GetLastSyncedLogId() uint64 {
	if m != nil {
		return m.LastSyncedLogId
	}
	return 0
}

type SyncRemoteReplicaResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncRemoteReplicaResp) Reset()         { *m = SyncRemoteReplicaResp{} }
func (m *SyncRemoteReplicaResp) String() string { return proto.CompactTextString(m) }
func (*SyncRemoteReplicaResp) ProtoMessage()    {}
func (*SyncRemoteReplicaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{3}
}
func (m *SyncRemoteReplicaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRemoteReplicaResp.Unmarshal(m, b)
}
func (m *SyncRemoteReplicaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRemoteReplicaResp.Marshal(b, m, deterministic)
}
func (dst *SyncRemoteReplicaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRemoteReplicaResp.Merge(dst, src)
}
func (m *SyncRemoteReplicaResp) XXX_Size() int {
	return xxx_messageInfo_SyncRemoteReplicaResp.Size(m)
}
func (m *SyncRemoteReplicaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRemoteReplicaResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRemoteReplicaResp proto.InternalMessageInfo

type PullRemoteReplicaReq struct {
	LastSyncedLogId      uint64   `protobuf:"varint,2,opt,name=last_synced_log_id,json=lastSyncedLogId,proto3" json:"last_synced_log_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRemoteReplicaReq) Reset()         { *m = PullRemoteReplicaReq{} }
func (m *PullRemoteReplicaReq) String() string { return proto.CompactTextString(m) }
func (*PullRemoteReplicaReq) ProtoMessage()    {}
func (*PullRemoteReplicaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{4}
}
func (m *PullRemoteReplicaReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRemoteReplicaReq.Unmarshal(m, b)
}
func (m *PullRemoteReplicaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRemoteReplicaReq.Marshal(b, m, deterministic)
}
func (dst *PullRemoteReplicaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRemoteReplicaReq.Merge(dst, src)
}
func (m *PullRemoteReplicaReq) XXX_Size() int {
	return xxx_messageInfo_PullRemoteReplicaReq.Size(m)
}
func (m *PullRemoteReplicaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRemoteReplicaReq.DiscardUnknown(m)
}

var xxx_messageInfo_PullRemoteReplicaReq proto.InternalMessageInfo

func (m *PullRemoteReplicaReq) GetLastSyncedLogId() uint64 {
	if m != nil {
		return m.LastSyncedLogId
	}
	return 0
}

type PullRemoteReplicaResp struct {
	LogItems             []*SyncMsgFileLogItem `protobuf:"bytes,1,rep,name=log_items,json=logItems,proto3" json:"log_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PullRemoteReplicaResp) Reset()         { *m = PullRemoteReplicaResp{} }
func (m *PullRemoteReplicaResp) String() string { return proto.CompactTextString(m) }
func (*PullRemoteReplicaResp) ProtoMessage()    {}
func (*PullRemoteReplicaResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ha_efc3aced84cf9532, []int{5}
}
func (m *PullRemoteReplicaResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRemoteReplicaResp.Unmarshal(m, b)
}
func (m *PullRemoteReplicaResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRemoteReplicaResp.Marshal(b, m, deterministic)
}
func (dst *PullRemoteReplicaResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRemoteReplicaResp.Merge(dst, src)
}
func (m *PullRemoteReplicaResp) XXX_Size() int {
	return xxx_messageInfo_PullRemoteReplicaResp.Size(m)
}
func (m *PullRemoteReplicaResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRemoteReplicaResp.DiscardUnknown(m)
}

var xxx_messageInfo_PullRemoteReplicaResp proto.InternalMessageInfo

func (m *PullRemoteReplicaResp) GetLogItems() []*SyncMsgFileLogItem {
	if m != nil {
		return m.LogItems
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "broker.Node")
	proto.RegisterType((*SyncMsgFileLogItem)(nil), "broker.SyncMsgFileLogItem")
	proto.RegisterType((*SyncRemoteReplicaReq)(nil), "broker.SyncRemoteReplicaReq")
	proto.RegisterType((*SyncRemoteReplicaResp)(nil), "broker.SyncRemoteReplicaResp")
	proto.RegisterType((*PullRemoteReplicaReq)(nil), "broker.PullRemoteReplicaReq")
	proto.RegisterType((*PullRemoteReplicaResp)(nil), "broker.PullRemoteReplicaResp")
	proto.RegisterEnum("broker.MsgFileType", MsgFileType_name, MsgFileType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HAClient is the client API for HA service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HAClient interface {
	SyncRemoteReplica(ctx context.Context, in *SyncRemoteReplicaReq, opts ...grpc.CallOption) (*SyncRemoteReplicaResp, error)
	PullRemoteReplica(ctx context.Context, in *PullRemoteReplicaReq, opts ...grpc.CallOption) (*PullRemoteReplicaResp, error)
}

type hAClient struct {
	cc *grpc.ClientConn
}

func NewHAClient(cc *grpc.ClientConn) HAClient {
	return &hAClient{cc}
}

func (c *hAClient) SyncRemoteReplica(ctx context.Context, in *SyncRemoteReplicaReq, opts ...grpc.CallOption) (*SyncRemoteReplicaResp, error) {
	out := new(SyncRemoteReplicaResp)
	err := c.cc.Invoke(ctx, "/broker.HA/SyncRemoteReplica", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hAClient) PullRemoteReplica(ctx context.Context, in *PullRemoteReplicaReq, opts ...grpc.CallOption) (*PullRemoteReplicaResp, error) {
	out := new(PullRemoteReplicaResp)
	err := c.cc.Invoke(ctx, "/broker.HA/PullRemoteReplica", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HAServer is the server API for HA service.
type HAServer interface {
	SyncRemoteReplica(context.Context, *SyncRemoteReplicaReq) (*SyncRemoteReplicaResp, error)
	PullRemoteReplica(context.Context, *PullRemoteReplicaReq) (*PullRemoteReplicaResp, error)
}

func RegisterHAServer(s *grpc.Server, srv HAServer) {
	s.RegisterService(&_HA_serviceDesc, srv)
}

func _HA_SyncRemoteReplica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRemoteReplicaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HAServer).SyncRemoteReplica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.HA/SyncRemoteReplica",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HAServer).SyncRemoteReplica(ctx, req.(*SyncRemoteReplicaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _HA_PullRemoteReplica_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullRemoteReplicaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HAServer).PullRemoteReplica(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/broker.HA/PullRemoteReplica",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HAServer).PullRemoteReplica(ctx, req.(*PullRemoteReplicaReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _HA_serviceDesc = grpc.ServiceDesc{
	ServiceName: "broker.HA",
	HandlerType: (*HAServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SyncRemoteReplica",
			Handler:    _HA_SyncRemoteReplica_Handler,
		},
		{
			MethodName: "PullRemoteReplica",
			Handler:    _HA_PullRemoteReplica_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/proto/ha.proto",
}

func init() { proto.RegisterFile("pkg/proto/ha.proto", fileDescriptor_ha_efc3aced84cf9532) }

var fileDescriptor_ha_efc3aced84cf9532 = []byte{
	// 599 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x4f, 0xdb, 0x4c,
	0x10, 0xfd, 0x1c, 0x92, 0x90, 0x4c, 0x3e, 0xc0, 0x4c, 0x92, 0xe2, 0xd2, 0xd2, 0x46, 0x39, 0xa5,
	0x54, 0x4d, 0xa4, 0x40, 0x85, 0x38, 0x42, 0x2b, 0x5a, 0x24, 0x02, 0xc8, 0xed, 0xa9, 0x17, 0x6b,
	0x6d, 0xaf, 0x9d, 0x15, 0xde, 0xac, 0xd9, 0xdd, 0x48, 0x20, 0xf5, 0x47, 0xf4, 0x0f, 0xf4, 0xde,
	0xbf, 0xd1, 0x7f, 0x56, 0xed, 0x26, 0x08, 0x37, 0x89, 0x2a, 0xb5, 0x37, 0xbf, 0x37, 0x9e, 0x37,
	0x33, 0xef, 0x49, 0x0b, 0x98, 0xdf, 0xa4, 0x83, 0x5c, 0x0a, 0x2d, 0x06, 0x63, 0xd2, 0xb7, 0x1f,
	0x58, 0x0d, 0xa5, 0xb8, 0xa1, 0xb2, 0xfb, 0xdd, 0x81, 0xf2, 0xa5, 0x88, 0x29, 0x3e, 0x85, 0xda,
	0x44, 0xc4, 0x34, 0x48, 0x65, 0xee, 0x39, 0x1d, 0xa7, 0x57, 0xf7, 0xd7, 0x0d, 0xfe, 0x20, 0x73,
	0x7c, 0x06, 0x75, 0xa6, 0x02, 0x4e, 0x94, 0xa6, 0xd2, 0x2b, 0x75, 0x9c, 0x5e, 0xcd, 0xaf, 0x31,
	0x35, 0xb2, 0x18, 0x5f, 0xc1, 0x36, 0x27, 0x77, 0x81, 0xba, 0x9f, 0x44, 0x34, 0x0e, 0x32, 0x91,
	0x06, 0x2c, 0xf6, 0xd6, 0x3a, 0x4e, 0xaf, 0xec, 0x6f, 0x72, 0x72, 0xf7, 0xc9, 0xf2, 0x17, 0x22,
	0x3d, 0x8f, 0x71, 0x08, 0x4f, 0x34, 0x95, 0x3c, 0x10, 0x49, 0xf0, 0x7b, 0x8b, 0x57, 0xb6, 0xff,
	0xa3, 0xa9, 0x5e, 0x25, 0xa3, 0x42, 0x57, 0xf7, 0x67, 0x09, 0xd0, 0xa0, 0x91, 0x4a, 0xcf, 0x58,
	0x46, 0x8d, 0x90, 0xa6, 0x1c, 0x5b, 0x50, 0xd1, 0x22, 0x67, 0xd1, 0x7c, 0xd5, 0x19, 0xc0, 0x17,
	0x00, 0x6a, 0x1a, 0xaa, 0x48, 0xb2, 0x70, 0xbe, 0x69, 0xdd, 0x2f, 0x30, 0xe6, 0xc6, 0x84, 0x65,
	0x34, 0x08, 0xa7, 0x89, 0x5d, 0xf1, 0x7f, 0x7f, 0xdd, 0xe0, 0xd3, 0x69, 0x82, 0x47, 0xb0, 0xc1,
	0x55, 0x1a, 0xd8, 0xb2, 0xbe, 0xcf, 0xa9, 0x5d, 0x69, 0x73, 0xd8, 0xec, 0xcf, 0x7c, 0xea, 0xcf,
	0xe7, 0x7f, 0xbe, 0xcf, 0xa9, 0xdf, 0xe0, 0x8f, 0xc0, 0x98, 0x63, 0x9b, 0x26, 0x84, 0x53, 0xaf,
	0x62, 0x47, 0xda, 0x21, 0x97, 0x84, 0x53, 0xdc, 0x03, 0x88, 0x24, 0x25, 0x9a, 0xc6, 0x01, 0xd1,
	0x5e, 0xb5, 0xe3, 0xf4, 0x36, 0xfc, 0xfa, 0x9c, 0x39, 0xd1, 0xf8, 0x12, 0x1a, 0xb6, 0x57, 0x24,
	0x89, 0xa2, 0xda, 0x5b, 0xb7, 0x75, 0x30, 0xd4, 0x95, 0x65, 0xb0, 0x0d, 0xd5, 0xb9, 0xa3, 0x35,
	0xeb, 0x50, 0x25, 0xb3, 0x46, 0xbe, 0x81, 0x26, 0x53, 0xd6, 0xbf, 0x20, 0x91, 0x82, 0x3f, 0x44,
	0x53, 0xb7, 0xd1, 0xb8, 0x4c, 0x19, 0xc3, 0xce, 0xa4, 0xe0, 0xb3, 0x88, 0xba, 0x5f, 0xa1, 0x65,
	0x18, 0x9f, 0x72, 0xa1, 0xa9, 0x4f, 0xf3, 0x8c, 0x45, 0xc4, 0xa7, 0xb7, 0x78, 0x04, 0x75, 0xab,
	0xae, 0x29, 0x57, 0x9e, 0xd3, 0x59, 0xeb, 0x35, 0x86, 0xbb, 0x0f, 0xf7, 0x2e, 0x7b, 0xee, 0xd7,
	0xb2, 0xd9, 0x87, 0xc2, 0xd7, 0x80, 0x19, 0x51, 0x7a, 0x21, 0xf4, 0x92, 0x5d, 0x71, 0xcb, 0x54,
	0x0a, 0xa9, 0x77, 0x77, 0xa0, 0xbd, 0x62, 0xba, 0xca, 0xbb, 0xef, 0xa0, 0x75, 0x3d, 0xcd, 0xb2,
	0xa5, 0xb5, 0xfe, 0x4a, 0xfd, 0x1a, 0xda, 0x2b, 0x44, 0x54, 0xfe, 0xcf, 0xc7, 0xed, 0x7f, 0x73,
	0xa0, 0x51, 0x48, 0x1b, 0x11, 0x36, 0x0b, 0xf0, 0x92, 0x65, 0xee, 0x7f, 0x0b, 0xdc, 0x79, 0x7c,
	0xe7, 0x3a, 0xd8, 0x84, 0xad, 0x02, 0xf7, 0x9e, 0x68, 0xe2, 0x96, 0xb0, 0x0d, 0xdb, 0x05, 0xf2,
	0x8c, 0x4d, 0x98, 0x1a, 0xbb, 0x6b, 0xd8, 0x02, 0xb7, 0x40, 0x8f, 0x54, 0x7a, 0x1e, 0xbb, 0x65,
	0xdc, 0x81, 0x66, 0x81, 0xbd, 0x10, 0x24, 0x3e, 0x15, 0x42, 0xbb, 0x95, 0xe1, 0x0f, 0x07, 0x4a,
	0x1f, 0x4f, 0xf0, 0x1a, 0xb6, 0x97, 0x9c, 0xc4, 0xe7, 0xc5, 0xa3, 0x16, 0xbd, 0xdc, 0xdd, 0xfb,
	0x43, 0x55, 0xe5, 0x46, 0x71, 0xc9, 0xbd, 0x47, 0xc5, 0x55, 0xe9, 0x3c, 0x2a, 0xae, 0xb4, 0xfd,
	0x74, 0xff, 0x4b, 0x2f, 0x65, 0x7a, 0x3c, 0x0d, 0xfb, 0x91, 0xe0, 0x83, 0xe3, 0xe3, 0xb7, 0xc7,
	0x07, 0x07, 0x87, 0x87, 0x47, 0x83, 0x70, 0x1a, 0xdd, 0x50, 0xcd, 0x6f, 0x07, 0xe6, 0x2d, 0x92,
	0x79, 0x34, 0x18, 0x93, 0xb0, 0x6a, 0x9f, 0xa2, 0x83, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe0,
	0x3d, 0x15, 0x95, 0xa0, 0x04, 0x00, 0x00,
}
